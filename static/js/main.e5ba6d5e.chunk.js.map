{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","console","log","className","type","value","onChange","target","min","step","max","NewExpense","ExpenseDate","props","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","setTitle","onClick","Expenses","items","App","expenses","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5ba6d5e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n// Importing SASS Styles\nimport \"../../scss/ExpenseForm.scss\";\n\nfunction ExpenseForm() {\n  // using multiple useState in multiple Variables\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  // using one state Method instead of multiple useState\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (event) => {\n    // using multiple useState\n    setEnteredTitle(event.target.value);\n    ////////////////////////\n    // using one state Method instead of multiple useState\n    // this way is not a good practice, because it might fail\n    // setUserInput({\n    //   ...userInput, // spread operator\n    //   enteredTitle: event.target.value,\n    // });\n    // the more efficient way would be function inside a function\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    // using multiple useState\n    setEnteredAmount(event.target.value);\n    ////////////////////////\n    // using one state Method instead of multiple useState\n    // this way is not a good practice, because it might fail\n    // setUserInput({\n    //   ...userInput, // spread operator\n    //   enteredAmount: event.target.value,\n    // });\n    // the more efficient way would be function inside a function\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredAmount: event.target.value };\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    // using multiple useState\n    setEnteredDate(event.target.value);\n    ////////////////////////\n    // using one state Method instead of multiple useState\n    //  this way is not a good practice, because it might fail\n    // setUserInput({\n    //   ...userInput, // spread operator\n    //   enteredDate: event.target.value,\n    // });\n    // the more efficient way would be function inside a function\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredDate: event.target.value };\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n    console.log(expenseData);\n    // The two way Binding to clear the input of the user after he/she submits\n    // Step 1\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    // step 2 you add a value into the input you wanna reset after a submission Example: value={enteredTitle}\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;\n","import React from \"react\";\n\n// Importing Components\nimport ExpenseForm from \"./ExpenseForm\";\n\n// Importing SASS Styles\nimport \"../../scss/NewExpense.scss\";\n\nconst NewExpense = () => {\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from \"react\";\n// Importing SASS Styles\nimport \"../../scss/ExpenseDate.scss\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"ar-EG\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-EG\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\n// Importing SASS Styles\nimport \"../../scss/Card.scss\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}> {props.children} </div>;\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\n// Importing components\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\n// Importing SASS Styles\nimport \"../../scss/ExpenseItem.scss\";\n\nconst ExpenseItem = (props) => {\n  const [title, setTitle] = useState(props.title);\n  console.log(\"ExpenseItem evaluated by React\");\n  const clickHandler = () => {\n    setTitle(\"محدث !\");\n    console.log(title);\n  };\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Change Title</button>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\n// Importing Components\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\n\n// Importing SASS Styles\nimport \"../../scss/Expense.scss\";\n\nconst Expenses = (props) => {\n  return (\n    <Card className=\"expenses\">\n      <ExpenseItem\n        title={props.items[0].title}\n        amount={props.items[0].amount}\n        date={props.items[0].date}\n      />\n      <ExpenseItem\n        title={props.items[1].title}\n        amount={props.items[1].amount}\n        date={props.items[1].date}\n      />\n      <ExpenseItem\n        title={props.items[2].title}\n        amount={props.items[2].amount}\n        date={props.items[2].date}\n      />\n      <ExpenseItem\n        title={props.items[3].title}\n        amount={props.items[3].amount}\n        date={props.items[3].date}\n      />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import React from \"react\";\n// Importing Components\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst App = () => {\n  const expenses = [\n    {\n      id: \"e1\",\n      title: \"ورق التواليت\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    {\n      id: \"e2\",\n      title: \"تلفزيون جديد\",\n      amount: 799.49,\n      date: new Date(2021, 2, 12),\n    },\n    {\n      id: \"e3\",\n      title: \"تأمين السيارة\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"مكتب جديد (خشبي)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  // React under the hood version which is old\n\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"Let's get Started<\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  // More friendly readable JSX React Code\n\n  return (\n    <div>\n      <NewExpense />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// Importing Sass\nimport \"./scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}