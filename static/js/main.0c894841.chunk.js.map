{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","isEditing","setIsEditing","onClick","enteredExpenseData","id","Math","random","toString","onAddExpense","onCancel","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expenses","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValue","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expense","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c894841.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n// Importing SASS Styles\nimport \"../../scss/ExpenseForm.scss\";\n\nfunction ExpenseForm(props) {\n  // using multiple useState in multiple Variables\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  // using one state Method instead of multiple useState\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (event) => {\n    // using multiple useState\n    setEnteredTitle(event.target.value);\n    ////////////////////////\n    // using one state Method instead of multiple useState\n    // this way is not a good practice, because it might fail\n    // setUserInput({\n    //   ...userInput, // spread operator\n    //   enteredTitle: event.target.value,\n    // });\n    // the more efficient way would be function inside a function\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    // using multiple useState\n    setEnteredAmount(event.target.value);\n    ////////////////////////\n    // using one state Method instead of multiple useState\n    // this way is not a good practice, because it might fail\n    // setUserInput({\n    //   ...userInput, // spread operator\n    //   enteredAmount: event.target.value,\n    // });\n    // the more efficient way would be function inside a function\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredAmount: event.target.value };\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    // using multiple useState\n    setEnteredDate(event.target.value);\n    ////////////////////////\n    // using one state Method instead of multiple useState\n    //  this way is not a good practice, because it might fail\n    // setUserInput({\n    //   ...userInput, // spread operator\n    //   enteredDate: event.target.value,\n    // });\n    // the more efficient way would be function inside a function\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredDate: event.target.value };\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    // The two way Binding to clear the input of the user after he/she submits\n    // Step 1\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    // step 2 you add a value into the input you wanna reset after a submission Example: value={enteredTitle}\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\n// Importing Components\nimport ExpenseForm from \"./ExpenseForm\";\n\n// Importing SASS Styles\nimport \"../../scss/NewExpense.scss\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from \"react\";\n// Importing SASS Styles\nimport \"../../scss/Card.scss\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}> {props.children} </div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\n// Importing SASS Styles\nimport \"../../scss/ExpensesFilter.scss\";\n\nconst ExpensesFilter = (props) => {\n  const dropDownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropDownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\n// Importing SASS Styles\nimport \"../../scss/ExpenseDate.scss\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"ar-EG\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-EG\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\n// Importing components\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\n// Importing SASS Styles\nimport \"../../scss/ExpenseItem.scss\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\n\n// Importing Components\nimport ExpenseItem from \"./ExpenseItem\";\n\n// Importing SASS Styles\nimport \"../../scss/ExpensesList.scss\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">found no expenses</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expenses) => (\n        <ExpenseItem\n          key={expenses.id}\n          title={expenses.title}\n          amount={expenses.amount}\n          date={expenses.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\n// Importing Styles\nimport \"../../scss/ChartBar.scss\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\n// Importing Components\nimport ChartBar from \"../Chart/ChartBar\";\n\n// Importing Styles\nimport \"../../scss/Chart.scss\";\n\nconst Chart = (props) => {\n  const dataPointValue = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValue);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\n// Importing Components\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\n// Importing SASS Styles\nimport \"../../scss/Expense.scss\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n// Importing Components\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"ورق التواليت\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"تلفزيون جديد\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"تأمين السيارة\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"مكتب جديد (خشبي)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    // this is the clean way of updating our useState when it is based on an older Snapshot.\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // React under the hood version which is old\n\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"Let's get Started<\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  // More friendly readable JSX React Code\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// Importing Sass\nimport \"./scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}